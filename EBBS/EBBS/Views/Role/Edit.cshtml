@model EBBS.Data.Role
 
@{
    ViewBag.Title = "Edit";
}

 
@using (Html.BeginForm("Edit", "Role", FormMethod.Post))
{
    @Html.AntiForgeryToken()
 
   
    <div class="form-horizontal">
        <h4>Edit Role</h4>
        <hr />
 
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.rId)
        
        <p style="color: red">@Html.Raw(TempData["UniqeMessage"])</p>


        <div class="form-group">
            @Html.LabelFor(model => model.rId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
 
            </div>
        </div>
 
        <div class="form-group">
            @Html.LabelFor(model => model.roleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.roleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.roleName, "", new { @class = "text-danger" })
            </div>
        </div>
 
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
 
                <button class="btn btn-success " type="submit"> <i class="glyphicon glyphicon-edit"></i>Save </button>
 
            </div>
        </div>
    </div>
}
 
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
 
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}