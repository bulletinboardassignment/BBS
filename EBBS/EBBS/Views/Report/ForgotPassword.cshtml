@model EBBS.Models.MyViewModel

@{
    ViewBag.Title = "ForgotPassword";
}


@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>MyViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon "><i class="glyphicon glyphicon-eye-close"></i></span>
                    @Html.DropDownListFor(model => Model.questionId, ViewBag.QuestionList as SelectList, "Select", new { id = "qid", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.questionId, "", new { @class = "text-danger" })

                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.answer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.answer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>


            <div class="form-group">
                <button class="btn btn-primary form-control" id="check" type="submit"><i class="glyphicon glyphicon-search"></i>  Validate</button>
            </div>

            <div class="form-group">
                <button class="btn form-control" style="background-color: gray; color: black" type="reset"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
            </div>


        </div>
    }




    <body id="grad">
        @using (Html.BeginForm("ForgotPassword", "My", FormMethod.Post))
        {
            @Html.AntiForgeryToken()


            <div class="container" style="margin-top: 10%">
                <div class="row">
                    <div class="col-md-4 col-md-offset-4 alert alert-info">
                        <h3 class="text-center">Validate Security Question</h3>
                        <form id="ForgotPasswordForm">
                            <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                    <input class="form-control" type="email" name="Username" id="username" placeholder="Username" />
                                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-eye-close"></i></span>
                                    <select class="form-control" id="qSelect">
                                        @foreach (var question in (List<EBBS.Data.SecurityQuestion>)ViewBag.securityQuestions)
                                        {
                                            <option value="@question.qId">@question.question</option>

                                        }
                                    </select>
                                    @Html.DropDownListFor(model => Model.questionId, ViewBag.QuestionList as SelectList, "Select", new { id = "qid", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.questionId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-font"></i></span>
                                    <input class="form-control" type="text" name="Username" id="qAnswer" placeholder="Answer" />
                                    @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </form>
                        <div class="form-group">
                            <button class="btn btn-primary form-control" id="check" type="submit"><i class="glyphicon glyphicon-search"></i>  Validate</button>
                        </div>

                        <div class="form-group">
                            <button class="btn form-control" style="background-color: gray; color: black" type="reset"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </body>





    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/Scripts/myscripts.js"></script>

        <script>
            $("#check").click(function (e) {
                e.preventDefault();
                var sqId = $("#qSelect").val();
                var answer = $("#qAnswer").val();
                var username = $("#username").val();

                $.ajax({
                    type: 'POST',
                    data: { username: username, sqId: sqId, answer: answer },
                    url: '/My/ForgotPassword',
                    success: function (response) {
                        if (response[0] == "success") {
                            alert(response[1]);
                            window.location.href = "/My/ResetPassword/" + response[2];
                        } else if (response[0] == "failure") {
                            alert(response[1]);

                        }

                    },
                    error: function (a, b, c) {

                    }

                });
            });
        </script>
    }*@



<body id="grad">
    @using (Html.BeginForm("ForgotPassword", "My", FormMethod.Post))
    {
        @Html.AntiForgeryToken()


        <div class="container" style="margin-top: 10%">
            <div class="row">
                <div class="col-md-4 col-md-offset-4 alert alert-info">
                    <h3 class="text-center">Validate Security Question</h3>
                    <form id="ForgotPasswordForm">
                        <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                <input class="form-control" type="email" name="Username" id="username" placeholder="Username" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-eye-close"></i></span>
                                @*<select class="form-control" id="qSelect">
                                    @foreach (var question in (List<EBBS.Data.SecurityQuestion>)ViewBag.securityQuestions)
                                    {
                                        <option value="@question.qId">@question.question</option>

                                    }
                                </select>*@
                                @Html.DropDownListFor(model => Model.questionId, ViewBag.QuestionList as SelectList, "Select", new { id = "qid", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.questionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-font"></i></span>
                                <input class="form-control" type="text" name="Username" id="qAnswer" placeholder="Answer" />
                            </div>
                        </div>

                    </form>
                    <div class="form-group">
                        <button class="btn btn-primary form-control" id="check" type="submit"><i class="glyphicon glyphicon-search"></i>  Validate</button>
                    </div>

                    <div class="form-group">
                        <button class="btn form-control" style="background-color: gray; color: black" type="reset"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
                    </div>
                </div>
            </div>
        </div>
    }
</body>
