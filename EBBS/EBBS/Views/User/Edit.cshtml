@using System.Runtime.InteropServices.WindowsRuntime
@using EBBS.Data.IDAO
@model EBBS.Data.User

@{
    ViewBag.Title = "Edit";
}

<style>
  
</style>

@using (Html.BeginForm("Edit", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Change User Role</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.userId)

    @*<div class="form-group">
        @Html.LabelFor(model => model.userImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" align="left">
            <img class="circular--square" src="~/images/@Model.userImage" alt="No profile image found" width="175" height="175" />
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.userId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.userId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.userType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownListFor(model => model.userType, new SelectList(Model.IENUMRoleDetails, "rId", "roleName"))
            @Html.ValidationMessageFor(model => model.userType, "", new { @class = "text-danger" })*@

            @Html.DropDownListFor(model => Model.userType, ViewBag.RoleList as SelectList, "Select Role (*)", new { id = "rid", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.userType, "", new { @class = "text-danger" })


        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.questionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SecurityQuestion.question, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <button class="btn btn-success" type="submit"> <i class="glyphicon glyphicon-plus-sign"></i> Submit </button>
            <button class="btn" style="background-color: lightgray" type="reset"> <i class="glyphicon glyphicon-refresh"></i> Reset </button>
            <button class="btn btn-info" onclick="location.href = '@Url.Action("Index","User")'" type="button"><i class="glyphicon glyphicon-plus-sign"></i> Cancel</button>



        </div>
    </div>
</div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")


    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/myscripts.js"></script>


}
