
@using System.Collections
@using System.Collections.Generic
@using System.Web.UI.WebControls
@model EBBS.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"></script>

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container" style="margin-top:20%">
        <div class="row">
            <div class="col-md-4 col-md-offset-4 alert alert-info">
                <h3 class="text-center">Registration</h3>
                <form id="RegForm">
                    <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "First Name" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "Last Name" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "Username" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-eye-close"></i></span>

                            @*@Html.DropDownListFor(model => model.questionId, (List<SelectListItem>) ViewBag.questions)*@

                            @*check dropdown css and username exist validation*@

                            @*@Html.DropDownListFor(model => model.questionId, new SelectList(ViewBag.QuestionList as System.Collections.IEnumerable, "qId", "question",""), new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Please select a product" } })*@
                            @Html.DropDownListFor(model => Model.questionId, ViewBag.QuestionList as IEnumerable<SelectListItem>, "qid", "question")
                            
                           @* @Html.DropDownListFor(model => Model.questionId, new SelectList(ViewBag.QuestionList as IEnumerable), "--Select--", "question")*@

                        </div>
                    </div>

                    @*<div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-font"></i></span>
                            @Html.EditorFor(model => model.answer, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "Answer" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
                    </div>*@

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "Password " } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @PlaceHolder = "Confirm Password" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                </form>
                <div class="form-group">
                    <button class="btn btn-info form-control" type="submit"><i class="glyphicon glyphicon-log-in"></i> Register</button>
                </div>
                <div class="form-group">
                    <button class="btn " style="background-color: gray; color: black" type="reset"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
                </div>
                <div class="form-group">
                    <a style="float: right; cursor: pointer" onclick="location.href = '@Url.Action("Login", "Account")'"> Do you have an account? Login Here</a>



                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    }